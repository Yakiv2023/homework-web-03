import os
import shutil
from concurrent.futures import ThreadPoolExecutor

def sort_files_by_extension(folder_path, destination_folder):
    if not os.path.exists(destination_folder):
        os.makedirs(destination_folder)

    extensions = {}

    def process_file(file_path):
        _, ext = os.path.splitext(file_path)
        ext = ext[1:]  # Remove the dot from the extension
        extensions.setdefault(ext, []).append(file_path)

    def move_files(ext_files):
        ext, files = ext_files
        ext_folder = os.path.join(destination_folder, ext)
        if not os.path.exists(ext_folder):
            os.makedirs(ext_folder)

        for file in files:
            shutil.move(file, ext_folder)

    with ThreadPoolExecutor(max_workers=os.cpu_count()) as executor:
        for root, _, files in os.walk(folder_path):
            file_paths = [os.path.join(root, file) for file in files]
            list(executor.map(process_file, file_paths))

        list(executor.map(move_files, extensions.items()))

if __name__ == "__main__":
    sort_files_by_extension("Мотлох", "Sorted_Motlokh")
    print("Сортування завершено.")

    


